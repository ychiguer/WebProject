[{"C:\\Users\\chigu\\Bureau\\Projects\\WebProject\\render\\src\\index.js":"1","C:\\Users\\chigu\\Bureau\\Projects\\WebProject\\render\\src\\reportWebVitals.js":"2","C:\\Users\\chigu\\Bureau\\Projects\\WebProject\\render\\src\\App.js":"3","C:\\Users\\chigu\\Bureau\\Projects\\WebProject\\render\\src\\pages\\home.js":"4","C:\\Users\\chigu\\Bureau\\Projects\\WebProject\\render\\src\\pages\\login.js":"5","C:\\Users\\chigu\\Bureau\\Projects\\WebProject\\render\\src\\threeJS\\homeScript.js":"6"},{"size":242,"mtime":1650272566628,"results":"7","hashOfConfig":"8"},{"size":375,"mtime":1649876048676,"results":"9","hashOfConfig":"8"},{"size":408,"mtime":1650272566623,"results":"10","hashOfConfig":"8"},{"size":1330,"mtime":1650810524460,"results":"11","hashOfConfig":"8"},{"size":195,"mtime":1650272566699,"results":"12","hashOfConfig":"8"},{"size":3679,"mtime":1650799374353,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1s98aey",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"17"},"C:\\Users\\chigu\\Bureau\\Projects\\WebProject\\render\\src\\index.js",[],[],[],"C:\\Users\\chigu\\Bureau\\Projects\\WebProject\\render\\src\\reportWebVitals.js",[],[],"C:\\Users\\chigu\\Bureau\\Projects\\WebProject\\render\\src\\App.js",[],[],"C:\\Users\\chigu\\Bureau\\Projects\\WebProject\\render\\src\\pages\\home.js",["34"],[],"C:\\Users\\chigu\\Bureau\\Projects\\WebProject\\render\\src\\pages\\login.js",[],[],"C:\\Users\\chigu\\Bureau\\Projects\\WebProject\\render\\src\\threeJS\\homeScript.js",["35","36","37"],[],"import * as THREE from 'three'\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js'\r\nimport * as dat from 'dat.gui'\r\nexport let setup3D = function (mount) {\r\n    // // Lights\r\n\r\n    // const pointLight1 = new THREE.PointLight(0x073EF8, 10)\r\n    // const pointLight1bis = new THREE.PointLight(0x073EF8, 1)\r\n    // const pointLight2 = new THREE.PointLight(0x073EF8, 10)\r\n    // const pointLight2bis = new THREE.PointLight(0x073EF8, 1)\r\n    // pointLight1.position.set(0, 0, 0)\r\n    // pointLight1bis.position.set(1.197, 2.123, 1.660)\r\n    // pointLight2.position.set(-1.141, 2.123, 1.660)\r\n    // pointLight2bis.position.set(-0.943, 2.123, 1.660)\r\n    // scene.add(pointLight1)\r\n    // scene.add(pointLight1bis)\r\n    // scene.add(pointLight2)\r\n    // scene.add(pointLight2bis)\r\n\r\n\r\n\r\n    // // Loading\r\n    // const textureLoader = new THREE.TextureLoader()\r\n    // let normalMap = textureLoader.load(\"./NormalMap.png\")\r\n\r\n    // Materials\r\n\r\n    // const material = new THREE.MeshStandardMaterial()\r\n    // material.color = new THREE.Color(0xF73EF8)\r\n    // material.roughness = 0.06\r\n    // material.metalness = 0.54\r\n    // material.normalMap = textureLoader.load(\"./NormalMap.png\")\r\n\r\n\r\n    // // Debug\r\n    // const gui = new dat.GUI()\r\n\r\n    // Canvas\r\n    const canvas = document.querySelector('canvas.webgl')\r\n\r\n    // Scene\r\n    const scene = new THREE.Scene()\r\n\r\n    // Objects\r\n    const geometry = new THREE.PlaneBufferGeometry(window.innerWidth, window.innerWidth, 20, 20)\r\n\r\n    // Materials\r\n\r\n    const material = new THREE.MeshStandardMaterial()\r\n    material.color = new THREE.Color(0x020004)\r\n    material.roughness = 0.06\r\n    material.metalness = 0.54\r\n    // material.normalMap = normalMap\r\n\r\n    // Mesh\r\n    const sphere = new THREE.Mesh(geometry, material)\r\n    scene.add(sphere)\r\n\r\n    // Lights\r\n\r\n    const pointLight1 = new THREE.PointLight(0x073EF8, 5)\r\n    const pointLight1bis = new THREE.PointLight(0x073EF8, 1)\r\n    const pointLight2 = new THREE.PointLight(0x073EF8, 5)\r\n    const pointLight2bis = new THREE.PointLight(0x073EF8, 1)\r\n    pointLight1.position.set(1.395 - 0.25, 0, 1.660)\r\n    pointLight1bis.position.set(1.197 - 0.25, 0, 1.660)\r\n    pointLight2.position.set(-1.141 + 0.25, 0, 1.660)\r\n    pointLight2bis.position.set(-0.943 + 0.25, 0, 1.660)\r\n    scene.add(pointLight1)\r\n    scene.add(pointLight1bis)\r\n    scene.add(pointLight2)\r\n    scene.add(pointLight2bis)\r\n\r\n    /**\r\n     * Sizes\r\n     */\r\n    const sizes = {\r\n        width: window.innerWidth,\r\n        height: window.innerHeight\r\n    }\r\n\r\n    window.addEventListener('resize', () => {\r\n        // Update sizes\r\n        sizes.width = window.innerWidth\r\n        sizes.height = window.innerHeight\r\n\r\n        // Update camera\r\n        camera.aspect = sizes.width / sizes.height\r\n        camera.updateProjectionMatrix()\r\n\r\n        // Update renderer\r\n        renderer.setSize(sizes.width, sizes.height)\r\n        renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2))\r\n    })\r\n\r\n    /**\r\n     * Camera\r\n     */\r\n    // Base camera\r\n    const camera = new THREE.PerspectiveCamera(75, sizes.width / sizes.height, 0.1, 100)\r\n    camera.position.x = 0\r\n    camera.position.y = 0\r\n    camera.position.z = 2\r\n    scene.add(camera)\r\n\r\n    // Controls\r\n    // const controls = new OrbitControls(camera, canvas)\r\n    // controls.enableDamping = true\r\n\r\n    /**\r\n     * Renderer\r\n     */\r\n    const renderer = new THREE.WebGLRenderer({ alpha: true })\r\n    renderer.setSize(sizes.width, sizes.height)\r\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2))\r\n\r\n    mount.append(renderer.domElement);\r\n    renderer.render(scene, camera)\r\n    // tick()\r\n}",{"ruleId":"38","severity":1,"message":"39","line":42,"column":6,"nodeType":"40","endLine":42,"endColumn":8,"suggestions":"41"},{"ruleId":"42","severity":1,"message":"43","line":2,"column":10,"nodeType":"44","messageId":"45","endLine":2,"endColumn":23},{"ruleId":"42","severity":1,"message":"46","line":3,"column":13,"nodeType":"44","messageId":"45","endLine":3,"endColumn":16},{"ruleId":"42","severity":1,"message":"47","line":39,"column":11,"nodeType":"44","messageId":"45","endLine":39,"endColumn":17},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'mount'. Either include it or remove the dependency array.","ArrayExpression",["48"],"no-unused-vars","'OrbitControls' is defined but never used.","Identifier","unusedVar","'dat' is defined but never used.","'canvas' is assigned a value but never used.",{"desc":"49","fix":"50"},"Update the dependencies array to be: [mount]",{"range":"51","text":"52"},[953,955],"[mount]"]